CREATE TABLE Users (
    Id INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100)
);
INSERT INTO Users (Id, FirstName, LastName, Email) VALUES
(1, 'Sam', 'Sony', 'Sam@aaa.com'),
(2, 'Ram', 'Barber', 'Ram@aaa.com'),
(3, 'Sara', 'Sanosky', 'Sara@ccc.com'),
(4, 'Todd', 'Gartner', 'Todd@bbb.com'),
(5, 'John', 'Grover', 'John@aaa.com'),
(6, 'Sana', 'Lenin', 'Sana@ccc.com'),
(7, 'James', 'Bond', 'James@bbb.com'),
(8, 'Rob', 'Hunter', 'Rob@ccc.com'),
(9, 'Steve', 'Wilson', 'Steve@aaa.com'),
(10, 'Pam', 'Broker', 'Pam@bbb.com');

--select * from Users

---Select LEFT('ABCDE', 3)

---Select RIGHT('ABCDE', 3)

---Select CHARINDEX('@','sara@ccc.com',3)

---In this example, we get the position of the first '@' at position 5
--- If the first occurrence of '@' 
--were before position 3, it would not be found.


-- Select SUBSTRING('John@bbb.com',5, 7)

-- The first argument is the string from which to extract.
-- The second argument (5) specifies the starting position (1-based index).
-- The third argument (7) specifies the length of the substring to extract.
-- In this case, starting from position 5, the substring would be:

-- Position 5: @----1
-- Position 6: b----2
-- Position 7: b----3
-- Position 8: b----4
-- Position 9: . ----5
-- Position 10: c ----6
-- Position 11: o ----7

-- Select SUBSTRING('John@bbb.com',(CHARINDEX('@', 'John@bbb.com') + 1),

-- (LEN('John@bbb.com') - CHARINDEX('@','John@bbb.com')))


-- CHARINDEX('@', 'John@bbb.com'): This finds the position of '@' in the string.
-- The result is 5.

-- (CHARINDEX('@', 'John@bbb.com') + 1): This adds 1 to the position of '@',
-- giving 6. 
-- This means the substring will start at the 6th character (which is 'b').

-- LEN('John@bbb.com'): This calculates the length of the string, which is 13.

-- (LEN('John@bbb.com') - CHARINDEX('@', 'John@bbb.com')): 
-- This calculates how many characters are to be taken 
-- from the starting position.
-- The calculation is 13 - 5 = 8.

-- Putting it all together, the SUBSTRING function extracts 
-- from position 6 for a length of 8:

-- The string from position 6 is 'bbb.com'.

-- So, the output of the entire SQL statement will be 'bbb.com'.

Select SUBSTRING(Email, CHARINDEX('@', Email) + 1,
LEN(Email) - CHARINDEX('@', Email)) as EmailDomain,
COUNT(Email) as Total
from Users
Group By SUBSTRING(Email, CHARINDEX('@', Email) + 1,
LEN(Email) - CHARINDEX('@', Email))













































